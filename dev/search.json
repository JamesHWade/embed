[{"path":[]},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://embed.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://embed.tidymodels.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to embed","title":"Contributing to embed","text":"outlines propose change embed. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://embed.tidymodels.org/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to embed","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://embed.tidymodels.org/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to embed","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://embed.tidymodels.org/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to embed","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"topepo/embed\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://embed.tidymodels.org/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to embed","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://embed.tidymodels.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to embed","text":"Please note embed project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://embed.tidymodels.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 embed authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://embed.tidymodels.org/dev/articles/Applications/GLM.html","id":"no-pooling","dir":"Articles > Applications","previous_headings":"","what":"No Pooling","title":"Using Generalized Linear Models","text":"case, effect location can estimated separately factor level. One method conducting estimation step fit logistic regression STEM classification outcome location predictor. , log-odds naturally estimated logistic regression. data, recipe created step_lencode_glm used: tidy method can used extract encodings merged raw estimates: locations n > 1, estimates effectively : Note also effect used novel location future data sets average effect:","code":"okc_glm <-    recipe(Class ~ ., data = okc) %>%   # specify the variable being encoded and the outcome   step_lencode_glm(location, outcome = vars(Class)) %>%   # estimate the effects   prep(training = okc) glm_estimates <-    tidy(okc_glm, number = 1) %>%    dplyr::select(-terms, -id)  glm_estimates ## # A tibble: 136 × 2 ##    level              value ##    <chr>              <dbl> ##  1 alameda            -1.79 ##  2 albany             -1.64 ##  3 arcadia           -14.6  ##  4 ashland           -14.6  ##  5 atherton           -1.25 ##  6 bayshore          -14.6  ##  7 belmont            -1.25 ##  8 belvedere tiburon  -2.58 ##  9 benicia            -2.39 ## 10 berkeley           -1.82 ## # … with 126 more rows glm_estimates <-    glm_estimates%>%   set_names(c(\"location\", \"glm\")) %>%     inner_join(props, by = \"location\") glm_estimates %>%   dplyr::filter(is.finite(log_odds)) %>%   mutate(difference = log_odds-glm) %>%   dplyr::select(difference) %>%   summary() ##    difference         ##  Min.   :-2.016e-13   ##  1st Qu.:-6.661e-15   ##  Median :-7.772e-16   ##  Mean   :-1.959e-16   ##  3rd Qu.: 6.661e-16   ##  Max.   : 3.666e-13 tidy(okc_glm, number = 1) %>%   dplyr::filter(level == \"..new\") %>%   select(-id) ## # A tibble: 1 × 3 ##   level value terms    ##   <chr> <dbl> <chr>    ## 1 ..new -7.79 location"},{"path":"https://embed.tidymodels.org/dev/articles/Applications/GLM.html","id":"partial-pooling","dir":"Articles > Applications","previous_headings":"","what":"Partial Pooling","title":"Using Generalized Linear Models","text":"method estimates effects using locations using hierarchical Bayesian generalized linear model. locations treated random set contributes random intercept previously used logistic regression. Partial pooling estimates effect combination separate empirical estimates log-odds prior distribution. locations small sample sizes, final estimate shrunken towards overall mean log-odds. makes sense since poor information estimating locations. locations many data points, estimates reply empirical estimates. page good discussion pooling using Bayesian models.","code":""},{"path":"https://embed.tidymodels.org/dev/articles/Applications/GLM.html","id":"bayesian-methods","dir":"Articles > Applications","previous_headings":"Partial Pooling","what":"Bayesian Methods","title":"Using Generalized Linear Models","text":"One appraoch partial pooling function step_lencode_bayes uses stan_glmer function rstanarm package. number options can used control model estimation routine, including: Using default priors, model estimated via: took time simple non-pooled model. embeddings extracted way: Note n = 1 locations estimates less extreme naive estimates. Also, Let’s see effect shrinkage indued partial pooling plotting naive results versus new results (finite data ): New levels encoded :","code":"opts <-    list(     ## the number of chains     chains = 4,     ## how many cores to use      cores = 4,     ## the total number of iterations per chain (low here for time)     iter = 500,     ## set the random number seed     seed = 8779   ) okc_glmer <-    recipe(Class ~ ., data = okc) %>%   step_lencode_bayes(     location,     outcome = vars(Class),     options = opts   ) %>%    prep(training = okc) ## Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. ## Running the chains for more iterations may help. See ## http://mc-stan.org/misc/warnings.html#bulk-ess ## Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. ## Running the chains for more iterations may help. See ## http://mc-stan.org/misc/warnings.html#tail-ess all_estimates <-    tidy(okc_glmer, number = 1) %>%    dplyr::select(-terms, -id) %>%   set_names(c(\"location\", \"glmer\")) %>%     inner_join(glm_estimates, by = \"location\")  all_estimates %>% dplyr::select(location, log_odds, glm, glmer) ## # A tibble: 135 × 4 ##    location          log_odds    glm glmer ##    <chr>                <dbl>  <dbl> <dbl> ##  1 alameda              -1.79  -1.79 -1.80 ##  2 albany               -1.64  -1.64 -1.67 ##  3 arcadia            -Inf    -14.6  -1.96 ##  4 ashland            -Inf    -14.6  -1.98 ##  5 atherton             -1.25  -1.25 -1.50 ##  6 bayshore           -Inf    -14.6  -2.03 ##  7 belmont              -1.25  -1.25 -1.32 ##  8 belvedere tiburon    -2.58  -2.58 -2.30 ##  9 benicia              -2.39  -2.39 -2.32 ## 10 berkeley             -1.82  -1.82 -1.82 ## # … with 125 more rows theme_set(theme_bw() + theme(legend.position = \"top\"))  pooled_plot <-   all_estimates %>%   dplyr::filter(is.finite(log_odds)) %>%   ggplot(aes(x = log_odds, y = glmer)) +    geom_abline(col = \"red\", alpha = .5) +    geom_point_interactive(aes(size = sqrt(n), tooltip = label),                           alpha = .5) +   xlim(rng) + ylim(rng)     # Convert the plot to a format that the html file can handle ggiraph(ggobj = pooled_plot) tidy(okc_glmer, number = 1) %>%   dplyr::filter(level == \"..new\") %>%   dplyr::select(-terms, -id) ## # A tibble: 1 × 2 ##   level value ##   <chr> <dbl> ## 1 ..new -1.98"},{"path":"https://embed.tidymodels.org/dev/articles/Applications/GLM.html","id":"empirical-bayesian-methodsmixed-models","dir":"Articles > Applications","previous_headings":"Partial Pooling","what":"Empirical Bayesian Methods/Mixed Models","title":"Using Generalized Linear Models","text":"generalized linear model can fit using mixed models via random intercept. lme4 package can also used get pooled estimates via step_lencode_mixed. Comparing raw mixed model estimates: values similar Bayesian estimates.","code":"okc_mixed <-    recipe(Class ~ ., data = okc) %>%   step_lencode_mixed(     location,     outcome = vars(Class),   ) %>%    prep(training = okc)  all_estimates <-    tidy(okc_mixed, number = 1) %>%    dplyr::select(-terms, -id) %>%   set_names(c(\"location\", \"mixed\")) %>%     inner_join(all_estimates, by = \"location\")  all_estimates %>%    dplyr::select(location, log_odds, glm, glmer, mixed) ## # A tibble: 135 × 5 ##    location          log_odds    glm glmer mixed ##    <chr>                <dbl>  <dbl> <dbl> <dbl> ##  1 alameda              -1.79  -1.79 -1.80 -1.80 ##  2 albany               -1.64  -1.64 -1.67 -1.67 ##  3 arcadia            -Inf    -14.6  -1.96 -1.97 ##  4 ashland            -Inf    -14.6  -1.98 -1.97 ##  5 atherton             -1.25  -1.25 -1.50 -1.50 ##  6 bayshore           -Inf    -14.6  -2.03 -2.03 ##  7 belmont              -1.25  -1.25 -1.32 -1.31 ##  8 belvedere tiburon    -2.58  -2.58 -2.30 -2.27 ##  9 benicia              -2.39  -2.39 -2.32 -2.30 ## 10 berkeley             -1.82  -1.82 -1.82 -1.82 ## # … with 125 more rows mixed_plot <-   all_estimates %>%   dplyr::filter(is.finite(log_odds)) %>%   ggplot(aes(x = log_odds, y = mixed)) +    geom_abline(col = \"red\", alpha = .5) +    geom_point_interactive(aes(size = sqrt(n), tooltip = label),                           alpha = .5) +    xlim(rng) + ylim(rng)   ggiraph(ggobj = mixed_plot)"},{"path":"https://embed.tidymodels.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Max Kuhn. Author, maintainer. . Copyright holder.","code":""},{"path":[]},{"path":"https://embed.tidymodels.org/dev/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Extra Recipes for Encoding Predictors","text":"embed extra steps recipes package embedding predictors one numeric columns. Almost preprocessing methods supervised. steps available separate package step dependencies, rstanarm, lme4, keras, fairly heavy. steps handle categorical predictors: step_lencode_glm(), step_lencode_bayes(), step_lencode_mixed() estimate effect factor levels outcome estimates used new encoding. estimates estimated generalized linear model. step can executed without pooling (via glm) partial pooling (stan_glm lmer). Currently implemented numeric two-class outcomes. step_embed() uses keras::layer_embedding translate original C factor levels set D new variables (< C). model fitting routine optimizes factor levels mapped new variables well corresponding regression coefficients (.e., neural network weights) used new encodings. step_woe() creates new variables based weight evidence encodings. step_feature_hash() can create indicator variables using feature hashing. numeric predictors: step_umap() uses nonlinear transformation similar t-SNE can used project transformation new data. supervised unsupervised methods can used. step_discretize_xgb() step_discretize_cart() can make binned versions numeric predictors using supervised tree-based models. references methods : Francois C Allaire JJ (2018) Deep Learning R, Manning Guo, C Berkhahn F (2016) “Entity Embeddings Categorical Variables” Micci-Barreca D (2001) “preprocessing scheme high-cardinality categorical attributes classification prediction problems,” ACM SIGKDD Explorations Newsletter, 3(1), 27-32. Zumel N Mount J (2017) “vtreat: data.frame Processor Predictive Modeling” McInnes L Healy J (2018) UMAP: Uniform Manifold Approximation Projection Dimension Reduction Good, . J. (1985), “Weight evidence: brief survey”, Bayesian Statistics, 2, pp.249-270.","code":""},{"path":"https://embed.tidymodels.org/dev/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Extra Recipes for Encoding Predictors","text":"two articles walk use embedding steps, using generalized linear models neural networks built via TensorFlow.","code":""},{"path":"https://embed.tidymodels.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extra Recipes for Encoding Predictors","text":"install package: Note use steps, also install packages rstanarm lme4. steps work, may want use: get bug fix use feature development version, can install development version package GitHub.","code":"install.packages(\"embed\") install.packages(c(\"rpart\", \"xgboost\", \"rstanarm\", \"lme4\")) # install.packages(\"remotes\") remotes::install_github(\"tidymodels/embed\")"},{"path":"https://embed.tidymodels.org/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Extra Recipes for Encoding Predictors","text":"project released Contributor Code Conduct. contributing project, agree abide terms. questions discussions tidymodels packages, modeling, machine learning, please post RStudio Community. think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Check details contributing guidelines tidymodels packages get help.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/add_woe.html","id":null,"dir":"Reference","previous_headings":"","what":"Add WoE in a data frame — add_woe","title":"Add WoE in a data frame — add_woe","text":"tidyverse friendly way plug WoE versions set predictor variables given binary outcome.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/add_woe.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Add WoE in a data frame — add_woe","text":"","code":"add_woe(.data, outcome, ..., dictionary = NULL, prefix = \"woe\")"},{"path":"https://embed.tidymodels.org/dev/reference/add_woe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add WoE in a data frame — add_woe","text":".data tbl. data.frame plug new woe version columns. outcome bare name outcome variable. ... Bare names predictor variables, passed pass variables dplyr::select(). means can use helpers like starts_with() matches(). dictionary tbl. NULL function build dictionary variables passed .... can pass custom dictionary , see dictionary() details. prefix character string prefix resulting new variables.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/add_woe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add WoE in a data frame — add_woe","text":"tibble original columns .data plus woe columns wanted.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/add_woe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add WoE in a data frame — add_woe","text":"can pass custom dictionary add_woe(). must exactly structure output dictionary(). One easy way tweak output returned .","code":""},{"path":"https://embed.tidymodels.org/dev/reference/dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight of evidence dictionary — dictionary","title":"Weight of evidence dictionary — dictionary","text":"Builds woe dictionary set predictor variables upon given binary outcome. Convenient make woe version given set predictor variables also allow one tweak woe values hand.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Weight of evidence dictionary — dictionary","text":"","code":"dictionary(.data, outcome, ..., Laplace = 1e-06)"},{"path":"https://embed.tidymodels.org/dev/reference/dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight of evidence dictionary — dictionary","text":".data tbl. data.frame variables come . outcome bare name outcome variable exactly 2 distinct values. ... bare names predictor variables selectors accepted dplyr::select(). Laplace Default 1e-6. pseudocount parameter Laplace Smoothing estimator. Value avoid -Inf/Inf predictor category one outcome class. Set 0 allow Inf/-Inf.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight of evidence dictionary — dictionary","text":"tibble summaries woe every given predictor variable stacked .","code":""},{"path":"https://embed.tidymodels.org/dev/reference/dictionary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weight of evidence dictionary — dictionary","text":"can pass custom dictionary step_woe(). must exactly structure output dictionary(). One easy way tweaking output returned .","code":""},{"path":"https://embed.tidymodels.org/dev/reference/dictionary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weight of evidence dictionary — dictionary","text":"Kullback, S. (1959). Information Theory Statistics. Wiley, New York. Hastie, T., Tibshirani, R. Friedman, J. (1986). Elements Statistical Learning, Second Edition, Springer, 2009. Good, . J. (1985), \"Weight evidence: brief survey\", Bayesian Statistics, 2, pp.249-270.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/is_tf_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Test to see if tensorflow is available — is_tf_available","title":"Test to see if tensorflow is available — is_tf_available","text":"Test see tensorflow available","code":""},{"path":"https://embed.tidymodels.org/dev/reference/is_tf_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Test to see if tensorflow is available — is_tf_available","text":"","code":"is_tf_available()"},{"path":"https://embed.tidymodels.org/dev/reference/is_tf_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test to see if tensorflow is available — is_tf_available","text":"logical","code":""},{"path":"https://embed.tidymodels.org/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics required_pkgs, tidy, tidy, tunable","code":""},{"path":"https://embed.tidymodels.org/dev/reference/required_pkgs.embed.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_lencode_bayes","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_lencode_bayes","text":"Recipe-adjacent packages always list required package steps can function properly within parallel processing schemes.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/required_pkgs.embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_lencode_bayes","text":"","code":"# S3 method for step_lencode_bayes required_pkgs(x, ...)  # S3 method for step_discretize_cart required_pkgs(x, ...)  # S3 method for step_discretize_xgb required_pkgs(x, ...)  # S3 method for step_lencode_glm required_pkgs(x, ...)  # S3 method for step_feature_hash required_pkgs(x, ...)  # S3 method for step_lencode_mixed required_pkgs(x, ...)  # S3 method for step_embed required_pkgs(x, ...)  # S3 method for step_umap required_pkgs(x, ...)  # S3 method for step_woe required_pkgs(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/required_pkgs.embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_lencode_bayes","text":"x recipe step","code":""},{"path":"https://embed.tidymodels.org/dev/reference/required_pkgs.embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_lencode_bayes","text":"character vector","code":""},{"path":"https://embed.tidymodels.org/dev/reference/solubility.html","id":null,"dir":"Reference","previous_headings":"","what":"Compound solubility data — solubility","title":"Compound solubility data — solubility","text":"Compound solubility data","code":""},{"path":"https://embed.tidymodels.org/dev/reference/solubility.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compound solubility data — solubility","text":"Tetko, ., Tanchuk, V., Kasheva, T., Villa, . (2001). Estimation aqueous solubility chemical compounds using E-state indices. Journal Chemical Information Computer Sciences, 41(6), 1488-1493. Huuskonen, J. (2000). Estimation aqueous solubility diverse set organic compounds based molecular topology. Journal Chemical Information Computer Sciences, 40(3), 773-777.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/solubility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compound solubility data — solubility","text":"solubility data frame","code":""},{"path":"https://embed.tidymodels.org/dev/reference/solubility.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compound solubility data — solubility","text":"Tetko et al. (2001) Huuskonen (2000) investigated set compounds corresponding experimental solubility values using complex sets descriptors. used linear regression neural network models estimate relationship chemical structure solubility. analyses, use 1267 compounds set understandable descriptors fall one three groups: 208 binary \"fingerprints\" indicate presence absence particular chemical sub-structure, 16 count descriptors (number bonds number Bromine atoms) 4 continuous descriptors (molecular weight surface area).","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_cart.html","id":null,"dir":"Reference","previous_headings":"","what":"Discretize numeric variables with CART — step_discretize_cart","title":"Discretize numeric variables with CART — step_discretize_cart","text":"step_discretize_cart creates specification recipe step discretize numeric data (e.g. integers doubles) bins supervised way using CART model.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_cart.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Discretize numeric variables with CART — step_discretize_cart","text":"","code":"step_discretize_cart(   recipe,   ...,   role = NA,   trained = FALSE,   outcome = NULL,   cost_complexity = 0.01,   tree_depth = 10,   min_n = 20,   rules = NULL,   skip = FALSE,   id = rand_id(\"discretize_cart\") )  # S3 method for step_discretize_cart tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_cart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discretize numeric variables with CART — step_discretize_cart","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables affected step. See selections() details. role Defaults \"predictor\". trained logical indicate quantities preprocessing estimated. outcome call vars specify variable used outcome train CART models order discretize explanatory variables. cost_complexity regularization parameter. split decrease overall lack fit factor cost_complexity attempted. Corresponds cp rpart::rpart(). Defaults 0.01. tree_depth maximum depth final tree. Corresponds maxdepth  rpart::rpart(). Defaults 10. min_n number data points node required continue splitting. Corresponds minsplit  rpart::rpart(). Defaults 20. rules splitting rules best CART tree retain variable. length zero, splitting used column. skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_discretize_cart object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_cart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discretize numeric variables with CART — step_discretize_cart","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_cart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discretize numeric variables with CART — step_discretize_cart","text":"step_discretize_cart() creates non-uniform bins numerical variables utilizing information outcome variable applying CART model. best selection buckets variable selected using standard cost-complexity pruning CART, makes discretization method resistant overfitting. step requires rpart package. installed, step stop note installing package. Note original data replaced new bins.","code":""},{"path":[]},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_xgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Discretize numeric variables with XgBoost — step_discretize_xgb","title":"Discretize numeric variables with XgBoost — step_discretize_xgb","text":"step_discretize_xgb creates specification recipe step discretize numeric data (e.g. integers doubles) bins supervised way using XgBoost model.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_xgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Discretize numeric variables with XgBoost — step_discretize_xgb","text":"","code":"step_discretize_xgb(   recipe,   ...,   role = NA,   trained = FALSE,   outcome = NULL,   sample_val = 0.2,   learn_rate = 0.3,   num_breaks = 10,   tree_depth = 1,   min_n = 5,   rules = NULL,   skip = FALSE,   id = rand_id(\"discretize_xgb\") )  # S3 method for step_discretize_xgb tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_xgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discretize numeric variables with XgBoost — step_discretize_xgb","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables affected step. See selections() details. role Defaults \"predictor\". trained logical indicate quantities preprocessing estimated. outcome call vars specify variable used outcome train XgBoost models order discretize explanatory variables. sample_val Share data used validation (early stopping) learned splits (rest used training). Defaults 0.20. learn_rate rate boosting algorithm adapts iteration--iteration. Corresponds eta xgboost package. Defaults 0.3. num_breaks maximum number discrete bins bucket continuous features. Corresponds max_bin xgboost package. Defaults 10. tree_depth maximum depth tree (.e. number splits). Corresponds max_depth xgboost package. Defaults 1. min_n minimum number instances needed node. Corresponds min_child_weight xgboost package. Defaults 5. rules splitting rules best XgBoost tree retain variable. skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_discretize_xgb object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_xgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discretize numeric variables with XgBoost — step_discretize_xgb","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_discretize_xgb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discretize numeric variables with XgBoost — step_discretize_xgb","text":"step_discretize_xgb() creates non-uniform bins numerical variables utilizing information outcome variable applying xgboost model. advised impute missing values step. step intended used particularly linear models thanks creating non-uniform bins becomes easier learn non-linear patterns data. best selection buckets variable selected using internal early stopping scheme implemented xgboost package, makes discretization method prone overfitting. pre-defined values underlying xgboost learns good reasonably complex results. However, one wishes tune recommended path first start changing value num_breaks e.g.: 20 30. give satisfactory results one experiment modifying tree_depth min_n parameters. Note recommended tune learn_rate simultaneously parameters. step requires xgboost package. installed, step stop note installing package. Note original data replaced new bins.","code":""},{"path":[]},{"path":"https://embed.tidymodels.org/dev/reference/step_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Encoding Factors into Multiple Columns — step_embed","title":"Encoding Factors into Multiple Columns — step_embed","text":"step_embed creates specification recipe step convert nominal (.e. factor) predictor set scores derived tensorflow model via word-embedding model. embed_control simple wrapper setting default options.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Encoding Factors into Multiple Columns — step_embed","text":"","code":"step_embed(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   outcome = NULL,   predictors = NULL,   num_terms = 2,   hidden_units = 0,   options = embed_control(),   mapping = NULL,   history = NULL,   skip = FALSE,   id = rand_id(\"lencode_bayes\") )  # S3 method for step_embed tidy(x, ...)  embed_control(   loss = \"mse\",   metrics = NULL,   optimizer = \"sgd\",   epochs = 20,   validation_split = 0,   batch_size = 32,   verbose = 0,   callbacks = NULL )"},{"path":"https://embed.tidymodels.org/dev/reference/step_embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encoding Factors into Multiple Columns — step_embed","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables. step_embed, indicates variables encoded numeric format. See recipes::selections() details. tidy method, currently used. role model terms created step, analysis role assigned?. default, function assumes embedding variables created used predictors model. trained logical indicate quantities preprocessing estimated. outcome call vars specify variable used outcome neural network. predictors optional call vars specify variables added additional predictors neural network. variables numeric perhaps centered scaled. num_terms integer number resulting variables. hidden_units integer number hidden units dense ReLu layer embedding output later. Use value zero intermediate layer (see Details ). options list options model fitting process. mapping list tibble results define encoding. NULL step trained recipes::prep.recipe(). history tibble convergence statistics term. NULL step trained recipes::prep.recipe(). skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify . x step_embed object. optimizer, loss, metrics Arguments pass keras::compile() epochs, validation_split, batch_size, verbose, callbacks Arguments pass keras::fit()","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encoding Factors into Multiple Columns — step_embed","text":"updated version recipe new step added sequence existing steps (). tidymethod, tibble columns terms (selectors variables encoding), level (factor levels), several columns containing embed name.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_embed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encoding Factors into Multiple Columns — step_embed","text":"Factor levels initially assigned random new variables variables used neural network optimize allocation levels new columns well estimating model predict outcome. See Section 6.1.2 Francois Allaire (2018) details. new variables mapped specific levels seen time model training extra instance variables used new levels factor. One model created call step_embed. terms given step estimated encoded model also contain predictors give predictors (). outcome numeric, linear activation function used last layer softmax used factor outcomes (number levels). example, keras code numeric outcome, one categorical predictor, hidden units used factor outcome used hidden units requested, code variables specified predictors added additional dense layer layer_flatten hidden layer. Also note may difficult obtain reproducible results using step due nature Tensorflow (see link References). tensorflow models run parallel within session (via foreach futures) parallel package. using recipes step caret, avoid parallel processing.","code":"keras_model_sequential() %>%    layer_embedding(     input_dim = num_factor_levels_x + 1,     output_dim = num_terms,     input_length = 1   ) %>%   layer_flatten() %>%   layer_dense(units = 1, activation = 'linear') keras_model_sequential() %>%    layer_embedding(     input_dim = num_factor_levels_x + 1,     output_dim = num_terms,     input_length = 1    ) %>%   layer_flatten() %>%   layer_dense(units = hidden_units, activation = \"relu\") %>%   layer_dense(units = num_factor_levels_y, activation = 'softmax')"},{"path":"https://embed.tidymodels.org/dev/reference/step_embed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Encoding Factors into Multiple Columns — step_embed","text":"Francois C Allaire JJ (2018) Deep Learning R, Manning \"can obtain reproducible results using Keras development?\" https://tinyurl.com/keras-repro \"Concatenate Embeddings Categorical Variables Keras\" https://flovv.github.io/Embeddings_with_keras_part2/","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_feature_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy Variables Creation via Feature Hashing — step_feature_hash","title":"Dummy Variables Creation via Feature Hashing — step_feature_hash","text":"step_feature_hash creates specification recipe step convert nominal data (e.g. character factors) one numeric binary columns using levels original data.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_feature_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy Variables Creation via Feature Hashing — step_feature_hash","text":"","code":"step_feature_hash(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   num_hash = 2^6,   preserve = deprecated(),   columns = NULL,   keep_original_cols = FALSE,   skip = FALSE,   id = rand_id(\"feature_hash\") )  # S3 method for step_feature_hash tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_feature_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dummy Variables Creation via Feature Hashing — step_feature_hash","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role model terms created step, analysis role assigned? default, new columns created step original variables used predictors model. trained logical indicate quantities preprocessing estimated. num_hash number resulting dummy variable columns. preserve Use keep_original_cols instead specify whether selected column(s) retained addition new dummy variables. columns character vector selected columns. NULL step trained recipes::prep.recipe(). keep_original_cols logical keep original variables output. Defaults FALSE. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify . x step_feature_hash object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_feature_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy Variables Creation via Feature Hashing — step_feature_hash","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_feature_hash.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dummy Variables Creation via Feature Hashing — step_feature_hash","text":"step_feature_hash() create set binary dummy variables factor character variable. values used determine row dummy variable assigned (opposed specific column value map ). Since method rely pre-determined assignment levels columns, new factor levels can added selected columns without issue. Missing values result missing values hashed columns. Note assignment levels hashing columns try maximize allocation. likely multiple levels column map hashed columns (even small data sets). Similarly, likely columns zeros. zero-variance filter (via recipes::step_zv()) recommended recipe uses hashed columns.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_feature_hash.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dummy Variables Creation via Feature Hashing — step_feature_hash","text":"Weinberger, K, Dasgupta, J Langford, Smola, J Attenberg. 2009. \"Feature Hashing Large Scale Multitask Learning.\" Proceedings 26th Annual International Conference Machine Learning, 1113–20. ACM. Kuhn Johnson (2020) Feature Engineering Selection: Practical Approach Predictive Models. CRC/Chapman Hall https://bookdown.org/max/FES/encoding-predictors--many-categories.html","code":""},{"path":[]},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_bayes","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_bayes","text":"step_lencode_bayes creates specification recipe step convert nominal (.e. factor) predictor single set scores derived generalized linear model estimated using Bayesian analysis.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_bayes","text":"","code":"step_lencode_bayes(   recipe,   ...,   role = NA,   trained = FALSE,   outcome = NULL,   options = list(seed = sample.int(10^5, 1)),   verbose = FALSE,   mapping = NULL,   skip = FALSE,   id = rand_id(\"lencode_bayes\") )  # S3 method for step_lencode_bayes tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_bayes","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables. step_lencode_bayes, indicates variables encoded numeric format. See recipes::selections() details. tidy method, currently used. role used step since new variables created. trained logical indicate quantities preprocessing estimated. outcome call vars specify variable used outcome generalized linear model. numeric two-level factors currently supported. options list options pass rstanarm::stan_glmer(). verbose logical control default printing rstanarm::stan_glmer(). mapping list tibble results define encoding. NULL step trained recipes::prep.recipe(). skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_lencode_bayes object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_bayes","text":"updated version recipe new step added sequence existing steps (). tidymethod, tibble columns terms (selectors variables encoding), level (factor levels), value (encodings).","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_bayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_bayes","text":"factor predictor, generalized linear model fit outcome coefficients returned encoding. coefficients linear predictor scale , factor outcomes, log-odds units. coefficients created using intercept model , two factor outcomes used, log-odds reflect event interest first level factor. novel levels, slightly timmed average coefficients returned. hierarchical generalized linear model fit using rstanarm::stan_glmer() intercept via ... include family argument (automatically set step) well arguments given options argument step. Relevant options include chains, iter, cores, arguments priors (see links References ). prior_intercept argument effect amount shrinkage.","code":"stan_glmer(outcome ~ (1 | predictor), data = data, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_bayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_bayes","text":"Micci-Barreca D (2001) \"preprocessing scheme high-cardinality categorical attributes classification prediction problems,\" ACM SIGKDD Explorations Newsletter, 3(1), 27-32. Zumel N Mount J (2017) \"vtreat: data.frame Processor Predictive Modeling,\" arXiv:1611.09477 \"Hierarchical Partial Pooling Repeated Binary Trials\" https://tinyurl.com/stan-pooling \"Prior Distributions `rstanarm`` Models\" https://tinyurl.com/stan-priors \"Estimating Generalized (Non-)Linear Models Group-Specific Terms rstanarm\" https://tinyurl.com/stan-glm-grouped","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_glm.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Factor Conversions into Linear Functions using Likelihood Encodings — step_lencode_glm","title":"Supervised Factor Conversions into Linear Functions using Likelihood Encodings — step_lencode_glm","text":"step_lencode_glm creates specification recipe step convert nominal (.e. factor) predictor single set scores derived generalized linear model.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_glm.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Factor Conversions into Linear Functions using Likelihood Encodings — step_lencode_glm","text":"","code":"step_lencode_glm(   recipe,   ...,   role = NA,   trained = FALSE,   outcome = NULL,   mapping = NULL,   skip = FALSE,   id = rand_id(\"lencode_glm\") )  # S3 method for step_lencode_glm tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_glm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Factor Conversions into Linear Functions using Likelihood Encodings — step_lencode_glm","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables. step_lencode_glm, indicates variables encoded numeric format. See recipes::selections() details. tidy method, currently used. role used step since new variables created. trained logical indicate quantities preprocessing estimated. outcome call vars specify variable used outcome generalized linear model. numeric two-level factors currently supported. mapping list tibble results define encoding. NULL step trained recipes::prep.recipe(). skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_lencode_glm object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_glm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supervised Factor Conversions into Linear Functions using Likelihood Encodings — step_lencode_glm","text":"updated version recipe new step added sequence existing steps (). tidymethod, tibble columns terms (selectors variables encoding), level (factor levels), value (encodings).","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_glm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supervised Factor Conversions into Linear Functions using Likelihood Encodings — step_lencode_glm","text":"factor predictor, generalized linear model fit outcome coefficients returned encoding. coefficients linear predictor scale , factor outcomes, log-odds units. coefficients created using intercept model , two factor outcomes used, log-odds reflect event interest first level factor. novel levels, slightly timmed average coefficients returned.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_glm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Supervised Factor Conversions into Linear Functions using Likelihood Encodings — step_lencode_glm","text":"Micci-Barreca D (2001) \"preprocessing scheme high-cardinality categorical attributes classification prediction problems,\" ACM SIGKDD Explorations Newsletter, 3(1), 27-32. Zumel N Mount J (2017) \"vtreat: data.frame Processor Predictive Modeling,\" arXiv:1611.09477","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_mixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_mixed","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_mixed","text":"step_lencode_mixed creates specification recipe step convert nominal (.e. factor) predictor single set scores derived generalized linear mixed model.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_mixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_mixed","text":"","code":"step_lencode_mixed(   recipe,   ...,   role = NA,   trained = FALSE,   outcome = NULL,   options = list(verbose = 0),   mapping = NULL,   skip = FALSE,   id = rand_id(\"lencode_mixed\") )  # S3 method for step_lencode_mixed tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_mixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_mixed","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables. step_lencode_mixed, indicates variables encoded numeric format. See recipes::selections() details. tidy method, currently used. role used step since new variables created. trained logical indicate quantities preprocessing estimated. outcome call vars specify variable used outcome generalized linear model. numeric two-level factors currently supported. options list options pass lme4::lmer() lme4::glmer(). mapping list tibble results define encoding. NULL step trained recipes::prep.recipe(). skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_lencode_mixed object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_mixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_mixed","text":"updated version recipe new step added sequence existing steps (). tidymethod, tibble columns terms (selectors variables encoding), level (factor levels), value (encodings).","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_mixed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_mixed","text":"factor predictor, generalized linear model fit outcome coefficients returned encoding. coefficients linear predictor scale , factor outcomes, log-odds units. coefficients created using intercept model , two factor outcomes used, log-odds reflect event interest first level factor. novel levels, slightly timmed average coefficients returned. hierarchical generalized linear model fit using lme4::lmer() lme4::glmer(), depending nature outcome, intercept via ... include family argument (automatically set step) well arguments given options argument step. Relevant options include control others.","code":"lmer(outcome ~ 1 + (1 | predictor), data = data, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_lencode_mixed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Supervised Factor Conversions into Linear Functions using Bayesian Likelihood Encodings — step_lencode_mixed","text":"Micci-Barreca D (2001) \"preprocessing scheme high-cardinality categorical attributes classification prediction problems,\" ACM SIGKDD Explorations Newsletter, 3(1), 27-32. Zumel N Mount J (2017) \"vtreat: data.frame Processor Predictive Modeling,\" arXiv:1611.09477","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse PCA Signal Extraction — step_pca_sparse","title":"Sparse PCA Signal Extraction — step_pca_sparse","text":"step_pca_sparse() creates specification recipe step convert numeric data one principal components can zero coefficients.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse PCA Signal Extraction — step_pca_sparse","text":"","code":"step_pca_sparse(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   num_comp = 5,   predictor_prop = 1,   options = list(),   res = NULL,   prefix = \"PC\",   keep_original_cols = FALSE,   skip = FALSE,   id = rand_id(\"pca_sparse\") )  # S3 method for step_pca_sparse tidy(x, ...)  # S3 method for step_pca_sparse tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse PCA Signal Extraction — step_pca_sparse","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used compute components. See selections() details. tidy method, currently used. role model terms created step, analysis role assigned? default, function assumes new principal component columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. num_comp number PCA components retain new predictors. num_comp greater number columns number possible components, smaller value used. predictor_prop maximum number original predictors can non-zero coefficients PCA component (via regularization). options list options default method irlba::ssvd(). res rotation matrix preprocessing step trained prep.recipe(). prefix character string prefix resulting new variables. See notes . keep_original_cols logical keep original variables output. Defaults FALSE. skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_pca_sparse object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse PCA Signal Extraction — step_pca_sparse","text":"updated version recipe new step added sequence existing steps (). tidy method, tibble columns terms (selectors variables selected), value (loading), component.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sparse PCA Signal Extraction — step_pca_sparse","text":"irlba package required step. installed, user prompted step defined. irlba::ssvd() function used encourage sparsity; documentation details method. argument num_comp controls number components retained (per default original variables used derive components removed data). new components names begin prefix sequence numbers. variable names padded zeros. example, num_comp < 10, names PC1 - PC9. num_comp = 101, names PC001 - PC101.","code":""},{"path":[]},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse Bayesian PCA Signal Extraction — step_pca_sparse_bayes","title":"Sparse Bayesian PCA Signal Extraction — step_pca_sparse_bayes","text":"step_pca_sparse_bayes() creates specification recipe step convert numeric data one principal components can zero coefficients.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse Bayesian PCA Signal Extraction — step_pca_sparse_bayes","text":"","code":"step_pca_sparse_bayes(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   num_comp = 5,   prior_slab_dispersion = 1,   prior_mixture_threshold = 0.1,   options = list(),   res = NULL,   prefix = \"PC\",   keep_original_cols = FALSE,   skip = FALSE,   id = rand_id(\"pca_sparse_bayes\") )  # S3 method for step_pca_sparse_bayes tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse_bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse Bayesian PCA Signal Extraction — step_pca_sparse_bayes","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used compute components. See selections() details. tidy method, currently used. role model terms created step, analysis role assigned? default, function assumes new principal component columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. num_comp number PCA components retain new predictors. num_comp greater number columns number possible components, smaller value used. value zero indicates PCA used data. prior_slab_dispersion value proportional dispersion (scale) parameter slab portion prior. Smaller values result increase zero coefficients. prior_mixture_threshold parameter defines trade-spike slab components prior. Increasing parameter increases number zero coefficients. options list options default method VBsparsePCA::VBsparsePCA(). res rotation matrix preprocessing step trained prep.recipe(). prefix character string prefix resulting new variables. See notes . keep_original_cols logical keep original variables output. Defaults FALSE. skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_pca_sparse_bayes object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse_bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse Bayesian PCA Signal Extraction — step_pca_sparse_bayes","text":"updated version recipe new step added sequence existing steps (). tidy method, tibble columns terms (selectors variables selected), value (loading), component.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse_bayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sparse Bayesian PCA Signal Extraction — step_pca_sparse_bayes","text":"VBsparsePCA package required step. installed, user prompted step defined. spike--slab prior mixture two priors. One (\"spike\") mass zero represents variable contribution PCA coefficients. prior broader distribution reflects coefficient distribution variables affect PCA analysis. \"slab\". narrower slab, likely coefficient zero (regularized closer zero). mixture two priors governed mixing parameter, prior distribution hyper-parameter prior. PCA coefficients resulting scores unique sign. step attempt make sign components consistent run--run. However, sparsity constraint may interfere goal. argument num_comp controls number components retained (per default original variables used derive components removed data). new components names begin prefix sequence numbers. variable names padded zeros. example, num_comp < 10, names PC1 - PC9. num_comp = 101, names PC001 - PC101.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_pca_sparse_bayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sparse Bayesian PCA Signal Extraction — step_pca_sparse_bayes","text":"Ning, B. (2021). Spike slab Bayesian sparse principal component analysis. arXiv:2102.00305.","code":""},{"path":[]},{"path":"https://embed.tidymodels.org/dev/reference/step_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised and unsupervised uniform manifold approximation and projection (UMAP) — step_umap","title":"Supervised and unsupervised uniform manifold approximation and projection (UMAP) — step_umap","text":"step_umap creates specification recipe step project set features smaller space.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised and unsupervised uniform manifold approximation and projection (UMAP) — step_umap","text":"","code":"step_umap(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   outcome = NULL,   neighbors = 15,   num_comp = 2,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   options = list(verbose = FALSE, n_threads = 1),   seed = sample(10^5, 2),   prefix = \"UMAP\",   keep_original_cols = FALSE,   retain = deprecated(),   object = NULL,   skip = FALSE,   id = rand_id(\"umap\") )  # S3 method for step_umap tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised and unsupervised uniform manifold approximation and projection (UMAP) — step_umap","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role model terms created step, analysis role assigned? default, new columns created step original variables used predictors model. trained logical indicate quantities preprocessing estimated. outcome call vars specify variable used outcome encoding process (). neighbors integer number nearest neighbors used construct target simplicial set. neighbors greater number data points, smaller value used. num_comp integer number UMAP components. num_comp greater number selected columns minus one, smaller value used. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See uwot::umap() details. options list options pass uwot::umap(). arguments X, n_neighbors, n_components, min_dist, n_epochs, ret_model, learning_rate passed . default, verbose n_threads set. seed Two integers control random numbers used numerical methods. default pulls main session's stream numbers give reproducible results seed set prior calling prep.recipe() bake.recipe(). prefix character string prefix resulting new variables. See notes . keep_original_cols logical keep original variables output. Defaults FALSE. retain Use keep_original_cols instead specify whether original predictors retained along new embedding variables. object object defines encoding. NULL step trained recipes::prep.recipe(). skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify . x step_umap object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supervised and unsupervised uniform manifold approximation and projection (UMAP) — step_umap","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_umap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supervised and unsupervised uniform manifold approximation and projection (UMAP) — step_umap","text":"UMAP, short Uniform Manifold Approximation Projection, nonlinear dimension reduction technique finds local, low-dimensional representations data. can run unsupervised supervised different types outcome data (e.g. numeric, factor, etc). new components names begin prefix sequence numbers. variable names padded zeros. example, num_comp < 10, names UMAP1 - UMAP9. num_comp = 101, names UMAP001 - UMAP101.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_umap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Supervised and unsupervised uniform manifold approximation and projection (UMAP) — step_umap","text":"McInnes, L., & Healy, J. (2018). UMAP: Uniform Manifold Approximation Projection Dimension Reduction.  https://arxiv.org/abs/1802.03426. \"UMAP Works\" https://umap-learn.readthedocs.io/en/latest/how_umap_works.html","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_woe.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight of evidence transformation — step_woe","title":"Weight of evidence transformation — step_woe","text":"step_woe creates specification recipe step transform nominal data numerical transformation based weights evidence binary outcome.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_woe.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Weight of evidence transformation — step_woe","text":"","code":"step_woe(   recipe,   ...,   role = \"predictor\",   outcome,   trained = FALSE,   dictionary = NULL,   Laplace = 1e-06,   prefix = \"woe\",   skip = FALSE,   id = rand_id(\"woe\") )  # S3 method for step_woe tidy(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/step_woe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight of evidence transformation — step_woe","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used compute components. See selections() details. tidy method, currently used. role model terms created step, analysis role assigned?. default, function assumes new woe components columns created original variables used predictors model. outcome bare name binary outcome encased vars(). trained logical indicate quantities preprocessing estimated. dictionary tbl. map levels woe values. must layout output returned dictionary(). `NULL`` function build dictionary variables passed .... See dictionary() details. Laplace Laplace smoothing parameter. value usually applied avoid -Inf/Inf predictor category one outcome class. Set 0 allow Inf/-Inf. default 1e-6. Also known 'pseudocount' parameter Laplace smoothing technique. prefix character string prefix resulting new variables. See notes . skip logical. step skipped recipe baked recipes::bake.recipe()? operations baked recipes::prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify . x step_woe object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_woe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight of evidence transformation — step_woe","text":"updated version recipe new step added sequence existing steps (). tidy method, tibble woe dictionary used map categories woe values.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_woe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weight of evidence transformation — step_woe","text":"WoE transformation group variables produces new set features. formula $$woe_c = log((P(X = c|Y = 1))/(P(X = c|Y = 0)))$$ \\(c\\) goes 1 \\(C\\) levels given nominal predictor variable \\(X\\). components designed transform nominal variables numerical ones property order magnitude reflects association binary outcome.  apply numerical predictors, advisable discretize variables prior running WoE. , variable binarized woe associated later. can achieved using step_discretize(). argument Laplace small quantity added proportions 1's 0's goal avoid log(p/0) log(0/p) results. numerical woe versions names begin woe_ followed respective original name variables. See Good (1985). One can pass custom dictionary tibble step_woe(). must structure output dictionary() (see examples). provided created automatically. role tibble store map levels nominal predictor woe values. may want tweak object goal fix orders levels one given predictor. One easy way tweaking output returned dictionary().","code":""},{"path":"https://embed.tidymodels.org/dev/reference/step_woe.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weight of evidence transformation — step_woe","text":"Kullback, S. (1959). Information Theory Statistics. Wiley, New York. Hastie, T., Tibshirani, R. Friedman, J. (1986). Elements Statistical Learning, Second Edition, Springer, 2009. Good, . J. (1985), \"Weight evidence: brief survey\", Bayesian Statistics, 2, pp.249-270.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/tunable_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"tunable methods for embed — tunable_embed","title":"tunable methods for embed — tunable_embed","text":"functions define parameters can tuned specific steps. also define recommended objects dials package can used generate new parameter values characteristics.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/tunable_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"tunable methods for embed — tunable_embed","text":"","code":"# S3 method for step_embed tunable(x, ...)  # S3 method for step_umap tunable(x, ...)  # S3 method for step_woe tunable(x, ...)  # S3 method for step_discretize_xgb tunable(x, ...)  # S3 method for step_discretize_cart tunable(x, ...)  # S3 method for step_pca_sparse tunable(x, ...)  # S3 method for step_pca_sparse_bayes tunable(x, ...)"},{"path":"https://embed.tidymodels.org/dev/reference/tunable_embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tunable methods for embed — tunable_embed","text":"x recipe step object ... used.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/tunable_embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tunable methods for embed — tunable_embed","text":"tibble object.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/woe_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Crosstable with woe between a binary outcome and a predictor variable. — woe_table","title":"Crosstable with woe between a binary outcome and a predictor variable. — woe_table","text":"Calculates summaries WoE (Weight Evidence) binary outcome given predictor variable. Used biuld dictionary.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/woe_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Crosstable with woe between a binary outcome and a predictor variable. — woe_table","text":"","code":"woe_table(predictor, outcome, Laplace = 1e-06)"},{"path":"https://embed.tidymodels.org/dev/reference/woe_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crosstable with woe between a binary outcome and a predictor variable. — woe_table","text":"predictor atomic vector, usualy distinct values. outcome dependent variable. atomic vector exactly 2 distinct values. Laplace pseudocount parameter Laplace Smoothing estimator. Default 1e-6. Value avoid -Inf/Inf predictor category one outcome class. Set 0 allow Inf/-Inf.","code":""},{"path":"https://embed.tidymodels.org/dev/reference/woe_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crosstable with woe between a binary outcome and a predictor variable. — woe_table","text":"tibble counts, proportions woe. Warning: woe can possibly -Inf. Use 'Laplace' arg avoid .","code":""},{"path":"https://embed.tidymodels.org/dev/reference/woe_table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Crosstable with woe between a binary outcome and a predictor variable. — woe_table","text":"Kullback, S. (1959). Information Theory Statistics. Wiley, New York. Hastie, T., Tibshirani, R. Friedman, J. (1986). Elements Statistical Learning, Second Edition, Springer, 2009. Good, . J. (1985), \"Weight evidence: brief survey\", Bayesian Statistics, 2, pp.249-270.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-development-version","dir":"Changelog","previous_headings":"","what":"embed (development version)","title":"embed (development version)","text":"Re-licensed package GPL-2 MIT. See consent copyright holders . tunable parameter ranges step_umap() changed neighbors, num_comp, min_dist prevent uwot segmentation faults. step also check see data dimensions consistent argument values. Two new PCA steps added, using sparse techniques estimation: step_pca_sparse() step_pca_sparse_bayes(). Updated use recipes_eval_select() recipes 0.1.17 (#85). Added prefix argument step_umap() harmonize recipes steps (#93).","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-014","dir":"Changelog","previous_headings":"","what":"embed 0.1.4","title":"embed 0.1.4","text":"CRAN release: 2021-01-16 Minor release changes test cases CRAN get xgboost work Solaris configuration. lme4 rstanarm now Suggests list automatically installed embed. message written console packages missing associated steps functions invoked.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-013","dir":"Changelog","previous_headings":"","what":"embed 0.1.3","title":"embed 0.1.3","text":"CRAN release: 2020-11-12 changes enable better parallel processing windows.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-012","dir":"Changelog","previous_headings":"","what":"embed 0.1.2","title":"embed 0.1.2","text":"CRAN release: 2020-10-17 Changes enable better parallel processing windows.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-011","dir":"Changelog","previous_headings":"","what":"embed 0.1.1","title":"embed 0.1.1","text":"CRAN release: 2020-07-03 Changes tests get archive jail. Updated plumbing behind step_woe(). Due bug tensorflow, added “warm start” instigate TF session one currently exist.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-010","dir":"Changelog","previous_headings":"","what":"embed 0.1.0","title":"embed 0.1.0","text":"CRAN release: 2020-05-25 Changes dplyr 1.0.0","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"new-steps-0-1-0","dir":"Changelog","previous_headings":"","what":"New Steps","title":"embed 0.1.0","text":"step_discretize_xgb() step_discretize_cart() can used convert numeric predictors categorical using supervised binning methods based tree models. Thanks Konrad Semsch contribution. Added step_feature_hash() creating dummy variables using feature hashing.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"embed 0.1.0","text":"tidy.step_woe() now column names consistent recipe steps.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"embed 0.1.0","text":"Fixed bug detecting TF version.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-006","dir":"Changelog","previous_headings":"","what":"embed 0.0.6","title":"embed 0.0.6","text":"CRAN release: 2020-03-17 Small changes base R’s stringsAsFactors change.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-005","dir":"Changelog","previous_headings":"","what":"embed 0.0.5","title":"embed 0.0.5","text":"CRAN release: 2020-01-07 example data now modeldata package. Small TF updates step_embed().","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-004","dir":"Changelog","previous_headings":"","what":"embed 0.0.4","title":"embed 0.0.4","text":"CRAN release: 2019-09-15 Methods added future generic called tunable(). outlines parameters step can/tuned. Small updates work different versions tidyr.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-003","dir":"Changelog","previous_headings":"","what":"embed 0.0.3","title":"embed 0.0.3","text":"CRAN release: 2019-07-12","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"new-steps-0-0-3","dir":"Changelog","previous_headings":"","what":"New Steps","title":"embed 0.0.3","text":"step_umap() added supervised unsupervised encodings. step_woe() created weight evidence encodings.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-002","dir":"Changelog","previous_headings":"","what":"embed 0.0.2","title":"embed 0.0.2","text":"CRAN release: 2018-11-19 mostly maintainence release compatible version 0.1.3 recipes.","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"other-changes-0-0-2","dir":"Changelog","previous_headings":"","what":"Other Changes:","title":"embed 0.0.2","text":"package now depends generics pacakge get broom tidy methods. Karim Lahrichi added ability use callbacks fitting tensorflow models. PR","code":""},{"path":"https://embed.tidymodels.org/dev/news/index.html","id":"embed-001","dir":"Changelog","previous_headings":"","what":"embed 0.0.1","title":"embed 0.0.1","text":"CRAN release: 2018-09-14 First CRAN version","code":""}]
